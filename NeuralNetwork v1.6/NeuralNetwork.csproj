<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{244FAEAF-625D-49E9-AF23-17CFCE305AF8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>NeuralNetwork</RootNamespace>
    <AssemblyName>NeuralNetwork v1.6</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Debug\NeuralNetwork v1.6.XML</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="MathLib, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\MathLib\MathLib\bin\Debug\MathLib.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="ZedGraph, Version=5.1.5.28844, Culture=neutral, PublicKeyToken=02a83cbd123fcd60, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\MathLib\MathLib\bin\Debug\ZedGraph.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Base\FuncActiv\Cos.cs" />
    <Compile Include="Base\FuncActiv\Gauss.cs" />
    <Compile Include="Base\FuncActiv\PRelu.cs" />
    <Compile Include="Base\FuncActiv\Relu.cs" />
    <Compile Include="Base\FuncActiv\Sigmoid.cs" />
    <Compile Include="Base\FuncActiv\Sign.cs" />
    <Compile Include="Base\FuncActiv\Sin.cs" />
    <Compile Include="Base\FuncActiv\Tanh.cs" />
    <Compile Include="Base\FuncActiv\Threshold.cs" />
    <Compile Include="Base\Layers\BatchNormalization.cs" />
    <Compile Include="Base\Layers\Convolutional.cs" />
    <Compile Include="Base\Layers\ConvolutionalDetecteble.cs" />
    <Compile Include="Base\Layers\ConvolutionalDistance.cs" />
    <Compile Include="Base\Layers\ConvolutionalEuclidean.cs" />
    <Compile Include="Base\Layers\DeepToMatrix.cs" />
    <Compile Include="Base\Layers\Direct.cs" />
    <Compile Include="Base\Layers\Dropout.cs" />
    <Compile Include="Base\Layers\Hand.cs" />
    <Compile Include="Base\Layers\Kernel.cs" />
    <Compile Include="Base\Layers\Input.cs" />
    <Compile Include="Base\Layers\Plastic.cs" />
    <Compile Include="Base\Layers\Polarization.cs" />
    <Compile Include="Base\Layers\Pool.cs" />
    <Compile Include="Base\Layers\Softmax.cs" />
    <Compile Include="Base\Layers\Tensor3ToTensor3.cs" />
    <Compile Include="Base\Layers\Tensor3ToVector.cs" />
    <Compile Include="Base\Layers\Unpool.cs" />
    <Compile Include="Base\Layers\Unpool1.cs" />
    <Compile Include="Base\Layers\UnpoolAround.cs" />
    <Compile Include="Base\Layers\VectorToTensor3.cs" />
    <Compile Include="Base\Layers\WTA.cs" />
    <Compile Include="ConvertorNet.cs" />
    <Compile Include="ILayer.cs" />
    <Compile Include="NeuralNetwork.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ReadyNeuralNetworks\DirectNetwork.cs" />
    <Compile Include="ReadyNeuralNetworks\DistanceNetwork.cs" />
    <Compile Include="ReadyNeuralNetworks\TrygonomApproxim.cs" />
    <Compile Include="ReadyNeuralNetworks\WTANetwork.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>